import java.util.* ;
import java.io.*; 
public class Queue {
    class Node{
        int val; Node next=null;
        Node(int val){this.val=val;};
    }
    private Node head; private Node tail;

    Queue() {
        // Implement the Constructor
        head=null;
        tail=null;
    }

    /*----------------- Public Functions of Queue -----------------*/

    boolean isEmpty() {
        // Implement the isEmpty() function
        return head==null;
    }

    void enqueue(int data) {
        // Implement the enqueue() function
        if(head==null){
            head=new Node(data);
            tail=head;
            tail.next=null;
            return;
        }
        tail.next=new Node(data);
        tail=tail.next;
        tail.next=null;
    }

    int dequeue() {
        // Implement the dequeue() function
        if(head==null) return -1;
        int res=head.val;
        head=head.next;
        return res;
    }

    int front() {
        // Implement the front() function
        if(head==null) return -1;
        return head.val;
    }

}
