import java.util.ArrayDeque;
import java.util.ArrayList;

public class Solution {

    public static boolean isGraphBirpatite(ArrayList<ArrayList<Integer>> edges) {

        // Write your code here
        int n=edges.size();
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
		    for(int i=0; i<n; i++) adj.add(new ArrayList<>());
		    for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                if(edges.get(i).get(j)==1){
                    adj.get(i).add(j);
                    adj.get(j).add(i);
                }
            }			
		    }
        int color[] = new int[n];        
        ArrayDeque<Integer> q = new ArrayDeque<>();
        q.add(0); color[0]=1;
        while(!q.isEmpty()){
            int cur=q.poll();
            int clr=(color[cur]==1)?2:1;

            for(int child: adj.get(cur)){
                if(color[child]==color[cur]) return false;
                if(color[child]==0){
                    color[child]=clr;
                    q.add(child);                    
                }
            }
        }
        return true;
    }
}
