import java.util.* ;
import java.io.*; 
/*
    Definition of Node class for reference

    class TreeNode<T> 
    {
        public T data;
        public TreeNode<T> left;
        public TreeNode<T> right;

        TreeNode(T data)
        {
            this.data = data;
            left = null;
            right = null;
        }
    }

*/
public class Solution {

    static class BSTIterator{

        Stack<TreeNode<Integer>> st = new Stack<>();

        BSTIterator(TreeNode<Integer> root){
            // Write your code here
            while(root!=null){
                st.push(root);
                root=root.left;
            }
        }

        int next(){
            // Write your code here
            TreeNode<Integer> cur = st.pop();
            int res=cur.data;
            cur=cur.right;
            while(cur!=null){
                st.push(cur);
                cur=cur.left;
            }
            return res;
        }

        boolean hasNext(){
            // Write your code here
            if(st.size()==0) return false;
            return true;
        }
    }
}

/*
    Your BSTIterator object will be instantiated and called as such:
    BSTIterator iterator = new BSTIterator(root);
    while(iterator.hasNext())
    {
       print(iterator.next()+" ");
    }
*/
