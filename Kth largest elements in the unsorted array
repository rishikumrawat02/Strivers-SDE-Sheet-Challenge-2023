import java.util.* ;

import jdk.nashorn.internal.ir.ReturnNode;

import java.io.*; 
public class Solution {

	static int kthLargest(ArrayList<Integer> arr, int size, int k) {
		// Write your code here.
		return qSort(0,size-1,arr,k);		
	}

	static int qSort(int left, int right, ArrayList<Integer> arr, int k){
		int n=arr.size();
		int idx=partition(left,right,arr);
		if(idx==n-k) return arr.get(idx);
		if(idx>n-k) return qSort(left,idx-1,arr,k);
		else return qSort(idx+1,right,arr,k);
	}

	static int partition(int left,int right, ArrayList<Integer> arr){
		int pivot=arr.get(right);
		int l=left;
		for(int i=left; i<right; i++){
			if(arr.get(i)<=pivot){
				int temp=arr.get(l);
				arr.set(l,arr.get(i));
				arr.set(i,temp);
				l++;
			}
		}
		arr.set(right,arr.get(l));
		arr.set(l,pivot);
		return l;
	}
}
