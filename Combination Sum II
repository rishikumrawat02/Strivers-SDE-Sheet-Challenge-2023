import java.util.*;

public class Solution 
{
    public static ArrayList<ArrayList<Integer>> combinationSum2(ArrayList<Integer> arr, int n, int target)
    {
        //    Write your code here.
        Collections.sort(arr);
        ArrayList<ArrayList<Integer>> res = new ArrayList<>();
        helper(0,0,n,target,res,new ArrayList<>(),arr);
        return res;
    }
    
    static void helper(int idx, int sum ,int n, int target, ArrayList<ArrayList<Integer>> res,
     ArrayList<Integer> curList, ArrayList<Integer> arr){
        if(sum==target){
            res.add(new ArrayList<>(curList));
            return;
        }
        if(idx>=n) return;
        for(int i=idx; i<n; i++){
            if(i!=idx && arr.get(i)==arr.get(i-1)) continue;
            curList.add(arr.get(i));
            helper(i+1,sum+arr.get(i),n,target,res,curList,arr);
            curList.remove(curList.size()-1);
        }
        return;        
    }
}
