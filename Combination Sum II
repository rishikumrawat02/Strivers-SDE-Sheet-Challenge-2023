import java.util.*;

public class Solution 
{
    public static ArrayList<ArrayList<Integer>> combinationSum2(ArrayList<Integer> arr, int n, int target)
    {
        Collections.sort(arr);
        HashSet<ArrayList<Integer>> set = new HashSet<>();
        int mask=(1<<n)-1;
        for(int i=1; i<=mask; i++){
            int sum=0;
            ArrayList<Integer> ans = new ArrayList<>();
            for(int j=0; j<n; j++){
                if((i&(1<<j))!=0){
                    sum+=arr.get(j);
                    ans.add(arr.get(j));
                }
            }
            if(sum==target) set.add(ans);
        }
        ArrayList<ArrayList<Integer>> res = new ArrayList<>(set);
        Collections.sort(res,new Comparator<ArrayList<Integer>>(){
            public int compare(ArrayList<Integer> a, ArrayList<Integer> b){
                for(int i=0; i<Math.min(a.size(),b.size()); i++){
                    if(a.get(i)!=b.get(i)) return Integer.compare(a.get(i), b.get(i));
                }
                return Integer.compare(a.size(), b.size());
            }
        });
        return res;
    }
}
