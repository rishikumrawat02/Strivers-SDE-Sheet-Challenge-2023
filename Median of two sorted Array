public class Solution {
    public static double median(int[] nums1, int[] nums2) {
    	// Write your code here.
        if(nums1.length > nums2.length){
            return median(nums2, nums1);
        }
        int r = nums1.length;
        int l = 0;
        
        int median = (nums1.length + nums2.length+1)/2;

        while(l <= r){        
            int div_1 = (l+r)/2;
            int div_2 = median - div_1;
            int left_1 = 0, left_2 = 0, right_1 = 0, right_2 = 0;
            if(div_1 !=0) left_1 = nums1[div_1 - 1]; else left_1 = Integer.MIN_VALUE;
            if(div_2 !=0) left_2 = nums2[div_2 - 1]; else left_2 = Integer.MIN_VALUE;
            if(div_1 != nums1.length) right_1 = nums1[div_1]; else right_1 = Integer.MAX_VALUE;
            if(div_2 != nums2.length) right_2 = nums2[div_2]; else right_2 = Integer.MAX_VALUE;

            if(left_1 <= right_2 && left_2 <= right_1){
                if((nums1.length + nums2.length)%2 == 0){
                    return Math.max(left_1, left_2)/2.0 + Math.min(right_1, right_2)/2.0;
                }
                else{
                    return Math.max(left_1, left_2);
                }
            }
            else if(left_1 > right_2){
                r= div_1 - 1;
            }
            else if(left_2 > right_1){
            // else if(left_2 > right_1){
                l= div_1 +1;
            }


        }
        return 8;
    }
}
